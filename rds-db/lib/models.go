// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package lib

import (
	"database/sql"
	"encoding/json"
	"time"

	"github.com/google/uuid"
	"github.com/sqlc-dev/pqtype"
)

type IdentityApiClient struct {
	ID             string          `db:"id" json:"id"`
	OrganizationID string          `db:"organization_id" json:"organizationID"`
	Provider       string          `db:"provider" json:"provider"`
	Info           json.RawMessage `db:"info" json:"info"`
	Role           string          `db:"role" json:"role"`
	Secret         string          `db:"secret" json:"secret"`
	CreationTime   time.Time       `db:"creation_time" json:"creationTime"`
	LastUpdateTime time.Time       `db:"last_update_time" json:"lastUpdateTime"`
	Type           string          `db:"type" json:"type"`
	ApiKeyHash     string          `db:"api_key_hash" json:"apiKeyHash"`
}

type IdentityIntegration struct {
	OrganizationID string          `db:"organization_id" json:"organizationID"`
	Partner        string          `db:"partner" json:"partner"`
	Service        string          `db:"service" json:"service"`
	Status         string          `db:"status" json:"status"`
	Info           json.RawMessage `db:"info" json:"info"`
	CreationTime   time.Time       `db:"creation_time" json:"creationTime"`
	CreatedBy      string          `db:"created_by" json:"createdBy"`
	LastUpdateTime time.Time       `db:"last_update_time" json:"lastUpdateTime"`
	LastUpdatedBy  string          `db:"last_updated_by" json:"lastUpdatedBy"`
}

type IdentityOrganization struct {
	ID                 string          `db:"id" json:"id"`
	Name               string          `db:"name" json:"name"`
	EmailDomain        string          `db:"email_domain" json:"emailDomain"`
	Website            string          `db:"website" json:"website"`
	Description        string          `db:"description" json:"description"`
	CreationTime       time.Time       `db:"creation_time" json:"creationTime"`
	Status             string          `db:"status" json:"status"`
	LastUpdateTime     time.Time       `db:"last_update_time" json:"lastUpdateTime"`
	AllowedAuthMethods []string        `db:"allowed_auth_methods" json:"allowedAuthMethods"`
	CreatedBy          string          `db:"created_by" json:"createdBy"`
	AuthID             string          `db:"auth_id" json:"authID"`
	Info               json.RawMessage `db:"info" json:"info"`
}

type IdentityRole struct {
	OrganizationID string    `db:"organization_id" json:"organizationID"`
	ID             string    `db:"id" json:"id"`
	Name           string    `db:"name" json:"name"`
	Description    string    `db:"description" json:"description"`
	Permissions    []string  `db:"permissions" json:"permissions"`
	CreationTime   time.Time `db:"creation_time" json:"creationTime"`
}

type IdentityUser struct {
	ID             string    `db:"id" json:"id"`
	FirstName      string    `db:"first_name" json:"firstName"`
	LastName       string    `db:"last_name" json:"lastName"`
	Email          string    `db:"email" json:"email"`
	CreationTime   time.Time `db:"creation_time" json:"creationTime"`
	LastUpdateTime time.Time `db:"last_update_time" json:"lastUpdateTime"`
}

type IdentityUserOrganization struct {
	UserID             string    `db:"user_id" json:"userID"`
	OrganizationID     string    `db:"organization_id" json:"organizationID"`
	UserRole           string    `db:"user_role" json:"userRole"`
	AllowedAuthMethods []string  `db:"allowed_auth_methods" json:"allowedAuthMethods"`
	CreationTime       time.Time `db:"creation_time" json:"creationTime"`
	LastUpdateTime     time.Time `db:"last_update_time" json:"lastUpdateTime"`
}

type WorkflowAuthIdentity struct {
	UserId       uuid.NullUUID `db:"userId" json:"userId"`
	ProviderId   string        `db:"providerId" json:"providerId"`
	ProviderType string        `db:"providerType" json:"providerType"`
	CreatedAt    time.Time     `db:"createdAt" json:"createdAt"`
	UpdatedAt    time.Time     `db:"updatedAt" json:"updatedAt"`
}

type WorkflowAuthProviderSyncHistory struct {
	ID           int32          `db:"id" json:"id"`
	ProviderType string         `db:"providerType" json:"providerType"`
	RunMode      string         `db:"runMode" json:"runMode"`
	Status       string         `db:"status" json:"status"`
	StartedAt    time.Time      `db:"startedAt" json:"startedAt"`
	EndedAt      time.Time      `db:"endedAt" json:"endedAt"`
	Scanned      int32          `db:"scanned" json:"scanned"`
	Created      int32          `db:"created" json:"created"`
	Updated      int32          `db:"updated" json:"updated"`
	Disabled     int32          `db:"disabled" json:"disabled"`
	Error        sql.NullString `db:"error" json:"error"`
}

type WorkflowCredentialsEntity struct {
	Name        string          `db:"name" json:"name"`
	Data        string          `db:"data" json:"data"`
	Type        string          `db:"type" json:"type"`
	NodesAccess json.RawMessage `db:"nodesAccess" json:"nodesAccess"`
	CreatedAt   time.Time       `db:"createdAt" json:"createdAt"`
	UpdatedAt   time.Time       `db:"updatedAt" json:"updatedAt"`
	ID          string          `db:"id" json:"id"`
}

type WorkflowEventDestination struct {
	ID          uuid.UUID       `db:"id" json:"id"`
	Destination json.RawMessage `db:"destination" json:"destination"`
	CreatedAt   time.Time       `db:"createdAt" json:"createdAt"`
	UpdatedAt   time.Time       `db:"updatedAt" json:"updatedAt"`
}

type WorkflowExecutionDatum struct {
	ExecutionId  int32           `db:"executionId" json:"executionId"`
	WorkflowData json.RawMessage `db:"workflowData" json:"workflowData"`
	Data         string          `db:"data" json:"data"`
}

type WorkflowExecutionEntity struct {
	ID             int32          `db:"id" json:"id"`
	Finished       bool           `db:"finished" json:"finished"`
	Mode           string         `db:"mode" json:"mode"`
	RetryOf        sql.NullString `db:"retryOf" json:"retryOf"`
	RetrySuccessId sql.NullString `db:"retrySuccessId" json:"retrySuccessId"`
	StartedAt      time.Time      `db:"startedAt" json:"startedAt"`
	StoppedAt      sql.NullTime   `db:"stoppedAt" json:"stoppedAt"`
	WaitTill       sql.NullTime   `db:"waitTill" json:"waitTill"`
	Status         sql.NullString `db:"status" json:"status"`
	WorkflowId     string         `db:"workflowId" json:"workflowId"`
	DeletedAt      sql.NullTime   `db:"deletedAt" json:"deletedAt"`
}

type WorkflowExecutionMetadatum struct {
	ID          int32  `db:"id" json:"id"`
	ExecutionId int32  `db:"executionId" json:"executionId"`
	Key         string `db:"key" json:"key"`
	Value       string `db:"value" json:"value"`
}

type WorkflowInstalledNode struct {
	Name          string `db:"name" json:"name"`
	Type          string `db:"type" json:"type"`
	LatestVersion int32  `db:"latestVersion" json:"latestVersion"`
	Package       string `db:"package" json:"package"`
}

type WorkflowInstalledPackage struct {
	PackageName      string         `db:"packageName" json:"packageName"`
	InstalledVersion string         `db:"installedVersion" json:"installedVersion"`
	AuthorName       sql.NullString `db:"authorName" json:"authorName"`
	AuthorEmail      sql.NullString `db:"authorEmail" json:"authorEmail"`
	CreatedAt        time.Time      `db:"createdAt" json:"createdAt"`
	UpdatedAt        time.Time      `db:"updatedAt" json:"updatedAt"`
}

type WorkflowMigration struct {
	ID        int32  `db:"id" json:"id"`
	Timestamp int64  `db:"timestamp" json:"timestamp"`
	Name      string `db:"name" json:"name"`
}

type WorkflowRole struct {
	ID        int32     `db:"id" json:"id"`
	Name      string    `db:"name" json:"name"`
	Scope     string    `db:"scope" json:"scope"`
	CreatedAt time.Time `db:"createdAt" json:"createdAt"`
	UpdatedAt time.Time `db:"updatedAt" json:"updatedAt"`
}

type WorkflowSetting struct {
	Key           string `db:"key" json:"key"`
	Value         string `db:"value" json:"value"`
	LoadOnStartup bool   `db:"loadOnStartup" json:"loadOnStartup"`
}

type WorkflowSharedCredential struct {
	CreatedAt     time.Time `db:"createdAt" json:"createdAt"`
	UpdatedAt     time.Time `db:"updatedAt" json:"updatedAt"`
	RoleId        int32     `db:"roleId" json:"roleId"`
	UserId        uuid.UUID `db:"userId" json:"userId"`
	CredentialsId string    `db:"credentialsId" json:"credentialsId"`
}

type WorkflowSharedWorkflow struct {
	CreatedAt  time.Time `db:"createdAt" json:"createdAt"`
	UpdatedAt  time.Time `db:"updatedAt" json:"updatedAt"`
	RoleId     int32     `db:"roleId" json:"roleId"`
	UserId     uuid.UUID `db:"userId" json:"userId"`
	WorkflowId string    `db:"workflowId" json:"workflowId"`
}

type WorkflowTagEntity struct {
	Name      string    `db:"name" json:"name"`
	CreatedAt time.Time `db:"createdAt" json:"createdAt"`
	UpdatedAt time.Time `db:"updatedAt" json:"updatedAt"`
	ID        string    `db:"id" json:"id"`
}

type WorkflowUser struct {
	ID                     uuid.UUID             `db:"id" json:"id"`
	Email                  sql.NullString        `db:"email" json:"email"`
	FirstName              sql.NullString        `db:"firstName" json:"firstName"`
	LastName               sql.NullString        `db:"lastName" json:"lastName"`
	Password               sql.NullString        `db:"password" json:"password"`
	PersonalizationAnswers pqtype.NullRawMessage `db:"personalizationAnswers" json:"personalizationAnswers"`
	CreatedAt              time.Time             `db:"createdAt" json:"createdAt"`
	UpdatedAt              time.Time             `db:"updatedAt" json:"updatedAt"`
	GlobalRoleId           int32                 `db:"globalRoleId" json:"globalRoleId"`
	Settings               pqtype.NullRawMessage `db:"settings" json:"settings"`
	ApiKey                 sql.NullString        `db:"apiKey" json:"apiKey"`
	Disabled               bool                  `db:"disabled" json:"disabled"`
	MfaEnabled             bool                  `db:"mfaEnabled" json:"mfaEnabled"`
	MfaSecret              sql.NullString        `db:"mfaSecret" json:"mfaSecret"`
	MfaRecoveryCodes       sql.NullString        `db:"mfaRecoveryCodes" json:"mfaRecoveryCodes"`
}

type WorkflowVariable struct {
	Key   string         `db:"key" json:"key"`
	Type  string         `db:"type" json:"type"`
	Value sql.NullString `db:"value" json:"value"`
	ID    string         `db:"id" json:"id"`
}

type WorkflowWebhookEntity struct {
	WebhookPath string         `db:"webhookPath" json:"webhookPath"`
	Method      string         `db:"method" json:"method"`
	Node        string         `db:"node" json:"node"`
	WebhookId   sql.NullString `db:"webhookId" json:"webhookId"`
	PathLength  sql.NullInt32  `db:"pathLength" json:"pathLength"`
	WorkflowId  string         `db:"workflowId" json:"workflowId"`
}

type WorkflowWorkflowEntity struct {
	Name         string                `db:"name" json:"name"`
	Active       bool                  `db:"active" json:"active"`
	Nodes        json.RawMessage       `db:"nodes" json:"nodes"`
	Connections  json.RawMessage       `db:"connections" json:"connections"`
	CreatedAt    time.Time             `db:"createdAt" json:"createdAt"`
	UpdatedAt    time.Time             `db:"updatedAt" json:"updatedAt"`
	Settings     pqtype.NullRawMessage `db:"settings" json:"settings"`
	StaticData   pqtype.NullRawMessage `db:"staticData" json:"staticData"`
	PinData      pqtype.NullRawMessage `db:"pinData" json:"pinData"`
	VersionId    sql.NullString        `db:"versionId" json:"versionId"`
	TriggerCount int32                 `db:"triggerCount" json:"triggerCount"`
	ID           string                `db:"id" json:"id"`
	Meta         pqtype.NullRawMessage `db:"meta" json:"meta"`
	SugerOrgId   string                `db:"sugerOrgId" json:"sugerOrgId"`
}

type WorkflowWorkflowHistory struct {
	VersionId   string          `db:"versionId" json:"versionId"`
	WorkflowId  string          `db:"workflowId" json:"workflowId"`
	Authors     string          `db:"authors" json:"authors"`
	CreatedAt   time.Time       `db:"createdAt" json:"createdAt"`
	UpdatedAt   time.Time       `db:"updatedAt" json:"updatedAt"`
	Nodes       json.RawMessage `db:"nodes" json:"nodes"`
	Connections json.RawMessage `db:"connections" json:"connections"`
}

type WorkflowWorkflowStatistic struct {
	Count       sql.NullInt32 `db:"count" json:"count"`
	LatestEvent sql.NullTime  `db:"latestEvent" json:"latestEvent"`
	Name        string        `db:"name" json:"name"`
	WorkflowId  string        `db:"workflowId" json:"workflowId"`
}

type WorkflowWorkflowsTag struct {
	WorkflowId string `db:"workflowId" json:"workflowId"`
	TagId      string `db:"tagId" json:"tagId"`
}
